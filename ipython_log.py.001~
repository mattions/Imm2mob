#log# Automatic Logger file. *** THIS MUST BE THE FIRST LINE ***
#log# DO NOT CHANGE THIS LINE OR THE TWO BELOW
#log# opts = Struct({'__allownew': True, 'logfile': 'ipython_log.py', 'pylab': 1})
#log# args = []
#log# It is safe to make manual edits below here.
#log#-----------------------------------------------------------------------
_ip.magic("logstart ")

workers = 23e6
minimal_pension = 4e6
annual_cheque = 550 # EUR
money_out = annual_cheque * (minimal_pension + workers)
money_out
total_houses = 32e6
contribution_in_month = 40 # EUR
money_in = total_houses * (contribution_in_month * 12)
money_in
second_houses = 12e6
third_houses = 12e6
contribution_in_month_first_option = 40 # EUR
money_in_first_option = total_houses * (contribution_in_month_first_option * 12)
money_in_second_option = (second_houses + third_houses) * (contribution_in_month_second_option * 12)
contribution_in_month_second_option = 100 # EUR
money_in_second_option = (second_houses + third_houses) * (contribution_in_month_second_option * 12)
money_in_second_option
money_in_first_option
plot(money_in_first_option)
plot(money_in_first_option, k+)
#?plot
plot(money_in_first_option, 'k+')
plot(money_in_second_option, 'r+')
ylim(0,30e6)
#?boxplot
plot(money_in_second_option, 'ro')
plot(money_in_first_option, 'bo')
figure()
ind = arange(3)
bar(ind, (money_in_first_option, money_in_second_option, money_out))
fig = figure()
ax = fig.add_subplot(111)
import numpy as np
ind = np.arange(2)
reacts1 = ax.bar(ind, (money_in_first_option, money_in_second_option))
show()
reacts1 = ax.bar(ind, (money_in_first_option, money_in_second_option))
width = 0.35
reacts1 = ax.bar(ind, (money_in_first_option, money_in_second_option), width)
reacts2 = ax.bar(ind+width, (money_out, money_out), width)
ax = fig.add_subplot(111)
fig = figure()
ax = fig.add_subplot(111)
reacts1 = ax.bar(ind, (money_in_first_option, money_in_second_option), width, color='r')
reacts2 = ax.bar(ind+width, (money_out, money_out), width, color='g')
draw()
def autolabel(rects):
    # attach some text labels
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%d'%int(height),
                ha='center', va='bottom')
autolabel(reacts1)
autolabel(reacts2)
draw()
def autolabel(rects):
    # attach some text labels
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%d'%int(height),
                ha='center', va='bottom')
        
ax.set_xticks(ind+width)
ax.set_xlabel('Prima Opzione', 'Seconda Opzione')
ax.set_xlabel(('Prima Opzione', 'Seconda Opzione'))
draw()
def autolabel(rects):
    # attach some text labels
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x()+rect.get_width()/2., 1.05*height, '%d'%int(height),
                ha='center', va='bottom')
        
autolabel(reacts1)
autolabel(reacts2)
draw()
ax.legend((reacts1[0], reacts[1]), ('Soldi in', 'Soldi out')
)
ax.legend((reacts1[0], reacts2[1]), ('Soldi in', 'Soldi out'))
draw()
a = 50
a =/10
a /= 10
a
